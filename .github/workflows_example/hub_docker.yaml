---
name: Build and Push Image to Hub Docker
on:
  push:
    tags:
      - "*"

jobs:
  build-push-release:
    name: Build and Push to Hub Docker ( Release )
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: expresso-typeorm
      PROJECT_ID: masb0ymas
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
      WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Github Tag Release Version
        id: latestTag
        run: |-
          echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "RELEASE_VERSION=release-${{ github.ref_name }}" >> $GITHUB_ENV

      - name: login to docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image
        run: |-
          docker build -t ${{ env.IMAGE_NAME }}:latest .

      - name: Push Docker Image to Docker Hub
        run: |-
          docker tag ${{ env.IMAGE_NAME }}:latest ${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest
          docker tag ${{ env.IMAGE_NAME }}:latest ${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:release
          docker tag ${{ env.IMAGE_NAME }}:latest ${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
          docker push ${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:release
          docker push ${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}

      - name: Call Webhook
        uses: joelwmale/webhook-action@2.3.2
        env:
          IMAGE_REGISTRY: Docker Hub
          IMAGE_REPOSITORY: hub.docker.com/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}
          IMAGE_TAG: ${{ env.RELEASE_VERSION }}
        with:
          url: ${{env.WEBHOOK_URL}}/api/v1/workflow-github?telegram_chat_id=${{ env.TELEGRAM_CHAT_ID }}&slack_channel=${{ env.SLACK_CHANNEL_ID }}&registry=${{ env.IMAGE_REGISTRY }}
          body: '{"push_data":{"tag":"${{ env.IMAGE_TAG }}"},"repository":{"name":"${{ env.IMAGE_REPOSITORY }}"}}'

  build-push-staging:
    name: Build and Push to Hub Docker ( Staging )
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: expresso-typeorm
      PROJECT_ID: masb0ymas
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
      WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Github Tag Staging Version
        id: latestTag
        run: |-
          echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "STAGING_VERSION=staging-${{ github.ref_name }}" >> $GITHUB_ENV

      - name: login to docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image
        run: |-
          docker build -f Dockerfile.dev -t ${{ env.IMAGE_NAME }}:staging .

      - name: Push Docker Image to Docker Hub
        run: |-
          docker tag ${{ env.IMAGE_NAME }}:staging ${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:staging
          docker tag ${{ env.IMAGE_NAME }}:staging ${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.STAGING_VERSION }}
          docker push ${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:staging
          docker push ${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.STAGING_VERSION }}

      - name: Call Webhook
        uses: joelwmale/webhook-action@2.3.2
        env:
          IMAGE_REGISTRY: Docker Hub
          IMAGE_REPOSITORY: hub.docker.com/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}
          IMAGE_TAG: ${{ env.STAGING_VERSION }}
        with:
          url: ${{env.WEBHOOK_URL}}/api/v1/workflow-github?telegram_chat_id=${{ env.TELEGRAM_CHAT_ID }}&slack_channel=${{ env.SLACK_CHANNEL_ID }}&registry=${{ env.IMAGE_REGISTRY }}
          body: '{"push_data":{"tag":"${{ env.IMAGE_TAG }}"},"repository":{"name":"${{ env.IMAGE_REPOSITORY }}"}}'
